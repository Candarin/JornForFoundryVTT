{"folder":"5K3BxqCAyXJiDROH","name":"Cloudberry Liquor (Runestone Brewery)","type":"consumable","img":"items/drink_cocktail_orange4.png","system":{"description":{"value":"<p>A smooth and sweet liquor crafted from the juicy and rare cloudberry fruit, offering a burst of fruity delight.</p>","chat":"","unidentified":""},"source":"Jorn","quantity":1,"weight":0,"price":{"value":5,"denomination":"sp"},"attunement":0,"equipped":false,"rarity":"common","identified":true,"activation":{"type":"","cost":null,"condition":""},"duration":{"value":"","units":""},"cover":null,"crewed":false,"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":"","autoDestroy":false},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":"","attackBonus":"","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"consumableType":"potion"},"effects":[],"sort":200000,"ownership":{"default":0,"QBMGwUJ4eeRL5q7e":3},"flags":{"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"itemacro":{"macro":{"name":"Cloudberry Liquor (Runestone Brewery)","type":"script","scope":"global","command":"// Set these for the specific drink\nlet selectedDrinkType = item.name;\nlet selectedDrinkTypeStrength = 4;\n\n\nlet actorHasIntoxPoints = true;\nlet actorCurrentIntoxPoints = 0;\nlet actorMoreThanHalfPointsRemain = true;\nlet actorCurrentIntoxLevel = 0;\nlet actorNeedsToSave = false;\nlet intoxSaveDC = 0;\n\n\n// Set up states\nconst intoxStates = [];\nintoxStates.push(\"Sober\", \"Buzzed\", \"Jazzed\", \"Tipsy\", \"Drunk\", \"Shitfaced\", \"FUBAR\");\n//console.log(intoxStates.length);\n\n// function\nlet drinkingHorn = async () => {\n    //console.log(item);\n    \n    let a = actor;\n    //console.log(a);\n\n    // check for item quantity\n    if (item.system.quantity <= 0) {\n        let dialog = new Promise((resolve, reject) => {\n            new Dialog({\n                title: 'Your drink is empty',\n                content: `\n                <form class=\"flexcol\">\n                <div class=\"form-group\">\n                    <p>You lift your cup to your mouth and find that it is empty. \n                    </p>\n                </div>\n                </form>\n            `,\n                //select element type\n                buttons: {\n                    close: {                        \n                        label: 'Close',                      \n                    },\n                }\n            }).render(true);\n        })\n        await dialog;\n\n        // exit function\n        return;\n    }\n\n    // reduce quantity of item    \n    await item.update({ 'system.quantity': item.system.quantity - 1, });\n\n    // Check for current intox level flag\n    try {\n        tempFlag = await a.getFlag('JornForFoundryVTT', 'currentIntoxLevel');\n\n        // validate value\n        if (typeof tempFlag === 'undefined') {\n            // val is null\n            actorCurrentIntoxLevel = 0\n            await a.setFlag('JornForFoundryVTT', 'currentIntoxLevel', 0);\n            console.log('Jorn | actorCurrentIntoxLevel (created flag): ' + actorCurrentIntoxLevel);\n        } else {\n            // val is ok\n            actorCurrentIntoxLevel = tempFlag;\n            console.log('Jorn | actorCurrentIntoxLevel (found flag): ' + actorCurrentIntoxLevel);\n        }\n    } catch (error) {\n        // flag doesn't exist\n\n        // Create flag if it doesn't exist\n        actorCurrentIntoxLevel = 0;\n        await a.setFlag('JornForFoundryVTT', 'currentIntoxLevel', 0);\n        console.log('Jorn | actorCurrentIntoxLevel (error, created flag): ' + actorCurrentIntoxLevel);\n    }\n\n    console.log('Jorn | Intox Flag: ' + await a.getFlag('JornForFoundryVTT', 'currentIntoxLevel'));\n\n\n    // Subtract drink value from current Intoxication Points\n    console.log('Jorn | Tertiary Value: ' + a.system.resources.tertiary.value);\n\n    // get current resource value\n    let currentTertiaryValue = a.system.resources.tertiary.value;\n    // check if it's undefined (happens when val is 0)\n    if (typeof currentTertiaryValue === 'undefined') { currentTertiaryValue = 0 }\n    // subract drink strength\n    actorCurrentIntoxPoints = currentTertiaryValue - Number(selectedDrinkTypeStrength);\n    // correct if it would make it < 0\n    if (actorCurrentIntoxPoints < 0) { actorCurrentIntoxPoints = 0 };\n\n    console.log('Jorn | Proposed actorCurrentIntoxPoints: ' + actorCurrentIntoxPoints);\n    await a.update({ 'system.resources.tertiary.value': actorCurrentIntoxPoints, });\n\n    // Check if points is > 0\n    if (token.actor.system.resources.tertiary.value > 0) {\n        actorHasIntoxPoints = true;\n    } else {\n        actorHasIntoxPoints = false;\n    }\n\n    // Check if points < half\n    if (a.system.resources.tertiary.max / 2 > actorCurrentIntoxPoints) { actorMoreThanHalfPointsRemain = false }\n\n    // Check if a save is needed\n    if ((selectedDrinkTypeStrength > 0 && actorMoreThanHalfPointsRemain === false) || selectedDrinkTypeStrength > 3) {\n        actorNeedsToSave = true;\n\n        // Generate save DC\n        let baseSaveDC = 8;\n        intoxSaveDC = baseSaveDC + actorCurrentIntoxLevel + Number(selectedDrinkTypeStrength);\n    }\n\n\n    // Generate message  \n    let messageContent = `<div class='dnd5e chat-card item-card'>`\n    messageContent += `<div class='card-content'>`\n    messageContent += `${token.actor.name} takes a drink!`\n    messageContent += `<p style=\"text-align: center; font-size: larger\"><strong> ${selectedDrinkType} [${selectedDrinkTypeStrength}]</strong></p>`\n    messageContent += `${item.system.description.value}`\n    messageContent += `<hr>`\n    messageContent += `Current Intoxication Points: ${actorCurrentIntoxPoints} of ${token.actor.system.resources.tertiary.max}<br>`\n    messageContent += `Current Intoxication Status: ${intoxStates[actorCurrentIntoxLevel]}`\n    messageContent += `<hr>`\n    messageContent += (actorNeedsToSave ? `${token.actor.name} needs to make a saving throw!` : `${token.actor.name} doesn't need to make a saving throw.`)\n    messageContent += `<hr></div>`\n    messageContent += `<div class='card-buttons'>`\n    messageContent += (actorNeedsToSave ? `<button class='jorn-drinking-savingthrow' data-actor-id=${actor.id} data-drink-strength=${selectedDrinkTypeStrength} data-saving-throw-dc=${intoxSaveDC}> Constituion Saving Throw DC ${intoxSaveDC} </button>` : '')\n    messageContent += `</div>`\n    messageContent += `</div>`\n\n    // messageContent += resultText\n\n\n    // check table function\n    function checkTable(table) {\n        let results = 0;\n        for (let data of table.data.results) {\n            if (!data.drawn) {\n                results++;\n            }\n        }\n        if (results < 1) {\n            table.reset();\n            ui.notifications.notify(\"Table Reset\")\n            return false\n        }\n        console.log(\"checkTable: Return True\");\n        return true\n    }\n\n\n    // create the message\n    if (messageContent !== '') {\n        let chatData = {\n            user: game.user._id,\n            speaker: ChatMessage.getSpeaker(),\n            content: messageContent\n        };\n\n        ChatMessage.create(chatData, {});\n    };\n\n};\n\n\ndrinkingHorn();","author":"QBMGwUJ4eeRL5q7e","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.iypUkrcS8GFElEm6"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1684905742914,"modifiedTime":1684971836881,"lastModifiedBy":"QBMGwUJ4eeRL5q7e"},"_id":"8037fTKr1qZdhYpm"}